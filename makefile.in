CC=@CXX@
EXT=@ext@
BIN=@name@
PKGCONFIG = $(shell which pkg-config)

# where is core code defined?
INCLUDEDIR=@srcdir@
SRCDIR=@srcdir@

# where is the frontend code or test code defined?
INCLUDEDIR_FRONT=@frontdir@
SRCDIR_FRONT=@frontdir@


ODIR=./obj
# all binaries
BINDIR=./bin

LIBS=@LIBS@
CFLAGS=-Wall -g -std=c++17 -Ilibs/argcc/src/ -Isrc/ @CXXFLAGS@
LIBS_TEST=
OTHER_FLAGS=
MAIN = @main@ # main for frontend
INSTALLDIR = @installdir@

# test source modules
MODULES_TEST = @testsObj@

# modules from core that can be testsd
TESTABLE_MODULES = @srcObj@

# modules for tui frontend
MODULES_FRONT = @frontendObj@

# dependencies and objects for sdl froentend
FRONT_DEPS=$(patsubst %,$(INCLUDEDIR_FRONT)/%.h,$(MODULES_FRONT))
DEPS=$(patsubst %,$(INCLUDEDIR)/%.h,$(TESTABLE_MODULES))
OBJ=$(patsubst %,$(ODIR)/%.o,$(MODULES_FRONT))
OBJ+=$(patsubst %,$(ODIR)/%.o,$(TESTABLE_MODULES))
OBJ+=$(patsubst %,$(ODIR)/%.o,$(MAIN))

# =====================
# main
# =====================

# core source code
$(ODIR)/%.o: $(SRCDIR)/%$(EXT) $(DEPS) | init
	$(CC) $(OTHER_FLAGS) -c -o $@ $< $(CFLAGS)

# tui froentend
$(ODIR)/%.o: $(SRCDIR_FRONT)/%$(EXT) $(FRONT_DEPS) | init
	$(CC) $(OTHER_FLAGS) -c -o $@ $< $(CFLAGS)

${BIN}: $(OBJ)
	$(CC) $(OTHER_FLAGS) -o $(BINDIR)/$@ $^ $(LIBS)

run:
	$(BINDIR)/$(BIN)

leaktest:
	valgrind -s $(BINDIR)/$(BIN)
# =====================
# other useful things
# =====================

.PHONY: clean
clean:
	rm -f $(ODIR)/*.o
	rm -f $(BINDIR)/*

.PHONY: setup
init:
	mkdir -p $(ODIR)
	mkdir -p $(BINDIR)

.PHONY: install
install:
	cp ${BINDIR}/${BIN} ${INSTALLDIR}/${BIN}
